class ApplePayCheckoutButton{static applePayConfig;static isConfigLoading;static configPromise;static applePayObject;constructor(){}async initApplePayConfig(){return ApplePayCheckoutButton.isConfigLoading?(ApplePayCheckoutButton.configPromise||(ApplePayCheckoutButton.configPromise=new Promise((e,t)=>{let a=setInterval(()=>{ApplePayCheckoutButton.applePayConfig&&(e(ApplePayCheckoutButton.applePayConfig),clearInterval(a))},100)})),ApplePayCheckoutButton.configPromise):(ApplePayCheckoutButton.applePayConfig||(ApplePayCheckoutButton.isConfigLoading=!0,ApplePayCheckoutButton.applePayConfig=await ApplePayCheckoutButton.applePay().config()),ApplePayCheckoutButton.applePayConfig)}static applePay(){return ApplePayCheckoutButton.applePayObject||(ApplePayCheckoutButton.applePayObject=angelleye_paypal_sdk.Applepay()),ApplePayCheckoutButton.applePayObject}render(e){"undefined"!=typeof ApplePaySession&&ApplePaySession?.supportsVersion(4)&&ApplePaySession?.canMakePayments()?this.initApplePayConfig().then(()=>{if(!ApplePayCheckoutButton.applePayConfig.isEligible){this.removeApplePayPaymentMethod();return}this.showApplePayPaymentMethod(),this.renderButton(e)}):(console.log("apple pay not supported"),this.removeApplePayPaymentMethod(e))}showApplePayPaymentMethod(){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_apple_pay").show()}removeApplePayPaymentMethod(e){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_apple_pay").hide(),jQuery(e).length&&jQuery(e).remove()}renderButton(e){this.containerSelector=e,this.initProductCartPage();let t=jQuery(e);t.html(""),console.log("rendering apple_pay button",e,t);let a=jQuery('<div class="apple-pay-container"></div>'),n=jQuery('<apple-pay-button id="btn-appl" buttonstyle="black" type="buy" locale="en">');n.on("click",{thisObject:this},this.handleClickEvent),a.append(n),t.append(a)}initProductCartPage(){(angelleyeOrder.isProductPage()||angelleyeOrder.isCartPage()||angelleyeOrder.isOrderPayPage())&&(window.angelleye_cart_totals=angelleye_ppcp_manager.product_cart_details)}static addPaymentMethodSaveParams(){return"true"===jQuery("input#wc-angelleye_ppcp_apple_pay-new-payment-method:checked").val()||window.angelleye_cart_totals.isSubscriptionRequired?{recurringPaymentRequest:{paymentDescription:angelleye_ppcp_manager.apple_pay_recurring_params.paymentDescription,regularBilling:{label:"Recurring",amount:`${window.angelleye_cart_totals.totalAmount}`,paymentTiming:"recurring",recurringPaymentStartDate:new Date},billingAgreement:angelleye_ppcp_manager.apple_pay_recurring_params.billingAgreement,managementURL:angelleye_ppcp_manager.apple_pay_recurring_params.managementURL,tokenNotificationURL:ApplePayCheckoutButton.applePayConfig.tokenNotificationURL}}:{}}async handleClickEvent(e){let t=e.data.thisObject.containerSelector;angelleyeOrder.showProcessingSpinner(),angelleyeOrder.setPaymentMethodSelector("apple_pay");let a=jQuery("input[name=wc-angelleye_ppcp_apple_pay-payment-token]:checked").val();if(console.log("isSavedPaymentMethodSelected",a),"new"!==a&&void 0!==a){await ApplePayCheckoutButton.handleTokenPayment(e);return}window.angelleye_cart_totals.totalAmount<=0&&angelleyeOrder.showError("Your shopping cart seems to be empty.");let n=[];window.angelleye_cart_totals.shippingRequired&&(n=["postalAddress","name","email"]);let o=ApplePayCheckoutButton.addPaymentMethodSaveParams(),p={countryCode:ApplePayCheckoutButton.applePayConfig.countryCode,currencyCode:window.angelleye_cart_totals.currencyCode,merchantCapabilities:ApplePayCheckoutButton.applePayConfig.merchantCapabilities,supportedNetworks:ApplePayCheckoutButton.applePayConfig.supportedNetworks,requiredBillingContactFields:["name","phone","email","postalAddress"],requiredShippingContactFields:n,total:{label:"Total Amount",amount:`${window.angelleye_cart_totals.totalAmount}`,type:"final"},lineItems:window.angelleye_cart_totals.lineItems,...o};console.log("paymentRequest",ApplePayCheckoutButton.applePayConfig,p);let l=null;try{l=new ApplePaySession(4,p)}catch(i){console.log("ApplePay error session init error: ",i),angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError("An error occurred while initiating the ApplePay payment.<br/>Error: "+i);return}let r=e=>{if(console.error(e),console.log(JSON.stringify(e)),"PayPalApplePayError"===e.name){let t=e.paypalDebugId;return"ERROR_VALIDATING_MERCHANT"===e.errorName?"This merchant is not enabled to process apple pay. please contact website owner. [DebugId: "+t+"]":"We are unable to process your request at the moment, please contact website owner. [DebugId: "+t+"]"}return e};l.onvalidatemerchant=e=>{ApplePayCheckoutButton.applePay().validateMerchant({validationUrl:e.validationURL}).then(e=>{l.completeMerchantValidation(e.merchantSession)}).catch(e=>{angelleyeOrder.hideProcessingSpinner();let t=r(e);angelleyeOrder.showError(t),l.abort()})},l.onpaymentmethodselected=e=>{l.completePaymentMethodSelection({newTotal:p.total})},l.onshippingcontactselected=async e=>{console.log("on shipping contact selected",e);let t={label:"Total Amount",amount:`${window.angelleye_cart_totals.totalAmount}`,type:"final"};try{let a=await angelleyeOrder.shippingAddressUpdate({shippingDetails:e.shippingContact});if(console.log("shipping update response",a),void 0!==a.totalAmount){t.amount=a.totalAmount;let n={newTotal:t,newLineItems:a.lineItems,errors:[]};console.log("updating total amount",n),Object.assign(p,{total:t,lineItems:a.lineItems}),l.completeShippingContactSelection(n)}else throw Error("Unable to update the shipping amount.")}catch(o){let i=r(o);angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(i),l.completePayment({status:ApplePaySession.STATUS_FAILURE})}},l.onshippingmethodselected=async e=>{console.log("on shipping method selected",e),l.completeShippingMethodSelection({})},l.onpaymentauthorized=async e=>{try{console.log("paymentAuthorized",e);let a=await angelleyeOrder.createOrder({angelleye_ppcp_button_selector:t,billingDetails:e.payment.billingContact,shippingDetails:e.payment.shippingContact}).then(e=>(console.log("orderCreated",e),e.orderID));await ApplePayCheckoutButton.applePay().confirmOrder({orderId:a,token:e.payment.token,billingContact:e.payment.billingContact,shippingContact:e.payment.shippingContact}),await l.completePayment({status:ApplePaySession.STATUS_SUCCESS}),angelleyeOrder.approveOrder({orderID:a,payerID:""})}catch(n){let o=r(n);angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(o),l.completePayment({status:ApplePaySession.STATUS_FAILURE})}},l.oncancel=e=>{console.log("Apple Pay Cancelled !!",e),angelleyeOrder.hideProcessingSpinner()},l.begin()}static async handleTokenPayment(e){let t=e.data.thisObject.containerSelector;angelleyeOrder.createOrder({angelleye_ppcp_button_selector:t,callback(){}}).catch(e=>{angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(e)})}}
