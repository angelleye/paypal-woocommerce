class ApplePayCheckoutButton{static applePayConfig;static isConfigLoading;static configPromise;static applePayObject;constructor(){}async initApplePayConfig(){return ApplePayCheckoutButton.isConfigLoading?(ApplePayCheckoutButton.configPromise||(ApplePayCheckoutButton.configPromise=new Promise((e,t)=>{let a=setInterval(()=>{ApplePayCheckoutButton.applePayConfig&&(e(ApplePayCheckoutButton.applePayConfig),clearInterval(a))},100)})),ApplePayCheckoutButton.configPromise):(ApplePayCheckoutButton.applePayConfig||(ApplePayCheckoutButton.isConfigLoading=!0,ApplePayCheckoutButton.applePayConfig=await ApplePayCheckoutButton.applePay().config()),ApplePayCheckoutButton.applePayConfig)}static applePay(){return ApplePayCheckoutButton.applePayObject||(ApplePayCheckoutButton.applePayObject=angelleye_paypal_sdk.Applepay()),ApplePayCheckoutButton.applePayObject}render(e){"undefined"!=typeof ApplePaySession&&ApplePaySession?.supportsVersion(4)&&ApplePaySession?.canMakePayments()?this.initApplePayConfig().then(()=>{if(!ApplePayCheckoutButton.applePayConfig.isEligible){this.removeApplePayPaymentMethod();return}this.showApplePayPaymentMethod(),this.renderButton(e)}):(console.log("apple pay not supported"),this.removeApplePayPaymentMethod(e))}showApplePayPaymentMethod(){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_apple_pay").show()}removeApplePayPaymentMethod(e){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_apple_pay").hide(),jQuery(e).length&&jQuery(e).remove()}renderButton(e){this.containerSelector=e,this.initProductCartPage();let t=jQuery(e);t.html(""),console.log("rendering apple_pay button",e,t);let a="black",n="plain",p="";if(void 0!==angelleye_ppcp_manager.apple_pay_button_props){a=angelleye_ppcp_manager.apple_pay_button_props.buttonColor,n=angelleye_ppcp_manager.apple_pay_button_props.buttonType;let o=angelleye_ppcp_manager.apple_pay_button_props.height;p=o=""!==o?"height: "+o+"px;":""}let l=jQuery('<div class="apple-pay-container" style="'+(""!==p?p:"")+'"></div>'),r=jQuery('<apple-pay-button id="btn-appl" buttonstyle="'+a+'" type="'+n+'" locale="en">');r.on("click",{thisObject:this},this.handleClickEvent),l.append(r),t.append(l)}initProductCartPage(){}static addPaymentMethodSaveParams(){let e=jQuery("input#wc-angelleye_ppcp_apple_pay-new-payment-method:checked").val(),t=angelleyeOrder.getCartDetails();return"true"===e||t.isSubscriptionRequired?{recurringPaymentRequest:{paymentDescription:angelleye_ppcp_manager.apple_pay_recurring_params.paymentDescription,regularBilling:{label:"Recurring",amount:`${t.totalAmount}`,paymentTiming:"recurring",recurringPaymentStartDate:new Date},billingAgreement:angelleye_ppcp_manager.apple_pay_recurring_params.billingAgreement,managementURL:angelleye_ppcp_manager.apple_pay_recurring_params.managementURL,tokenNotificationURL:ApplePayCheckoutButton.applePayConfig.tokenNotificationURL}}:{}}async handleClickEvent(e){let t=e.data.thisObject.containerSelector,a=angelleyeOrder.getCartDetails();angelleyeOrder.showProcessingSpinner(),angelleyeOrder.setPaymentMethodSelector("apple_pay");let n=angelleyeJsErrorLogger.generateErrorId();angelleyeJsErrorLogger.addToLog(n,"Apple Pay Payment Started");let p=jQuery("input[name=wc-angelleye_ppcp_apple_pay-payment-token]:checked").val();if(console.log("isSavedPaymentMethodSelected",p),"new"!==p&&void 0!==p){await ApplePayCheckoutButton.handleTokenPayment(e,n);return}a.totalAmount<=0&&angelleyeOrder.showError(localizedMessages.empty_cart_message);let o=[];a.shippingRequired&&(o=["postalAddress","name","email"]);let l=ApplePayCheckoutButton.addPaymentMethodSaveParams(),r={countryCode:ApplePayCheckoutButton.applePayConfig.countryCode,currencyCode:a.currencyCode,merchantCapabilities:ApplePayCheckoutButton.applePayConfig.merchantCapabilities,supportedNetworks:ApplePayCheckoutButton.applePayConfig.supportedNetworks,requiredBillingContactFields:["name","phone","email","postalAddress"],requiredShippingContactFields:o,total:{label:localizedMessages.total_amount_placeholder,amount:`${a.totalAmount}`,type:"final"},lineItems:a.lineItems,...l};console.log("paymentRequest",ApplePayCheckoutButton.applePayConfig,r);let i=null;try{i=new ApplePaySession(4,r)}catch(c){console.log("ApplePay error session init error: ",c),angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(localizedMessages.apple_pay_pay_error+"<br/>Error:"+c),angelleyeJsErrorLogger.logJsError(localizedMessages.apple_pay_pay_error+"<br/>Error:"+c,n);return}let s=e=>{if(angelleyeOrder.triggerPaymentCancelEvent(),angelleyeOrder.hideProcessingSpinner(),e){let t=y(e);angelleyeOrder.showError(t),angelleyeJsErrorLogger.logJsError(t,n),i.completePayment({status:ApplePaySession.STATUS_FAILURE})}},y=e=>{if(console.error(e),console.log(JSON.stringify(e)),"PayPalApplePayError"===e.name){let t=e.paypalDebugId;return"ERROR_VALIDATING_MERCHANT"===e.errorName?localizedMessages.error_validating_merchant+" [ApplePay DebugId:"+t+"]":localizedMessages.general_error_message+" [ApplePay DebugId:"+t+"]"}return e};i.onvalidatemerchant=e=>{ApplePayCheckoutButton.applePay().validateMerchant({validationUrl:e.validationURL}).then(e=>{i.completeMerchantValidation(e.merchantSession)}).catch(e=>{angelleyeOrder.hideProcessingSpinner();let t=y(e);angelleyeOrder.showError(t),angelleyeJsErrorLogger.logJsError(t,n),i.abort()})},i.onpaymentmethodselected=e=>{i.completePaymentMethodSelection({newTotal:r.total})},i.onshippingcontactselected=async e=>{let t=angelleyeOrder.getCartDetails();console.log("on shipping contact selected",e);let a={label:localizedMessages.total_amount_placeholder,amount:`${t.totalAmount}`,type:"final"};try{let n=await angelleyeOrder.shippingAddressUpdate({shippingDetails:e.shippingContact});if(console.log("shipping update response",n),void 0!==n.totalAmount){angelleyeOrder.updateCartTotalsInEnvironment(n),a.amount=n.totalAmount;let p={newTotal:a,newLineItems:n.lineItems,errors:[]};console.log("updating total amount",p),Object.assign(r,{total:a,lineItems:n.lineItems}),i.completeShippingContactSelection(p)}else throw Error(localizedMessages.shipping_amount_update_error)}catch(o){s(o)}},i.onshippingmethodselected=async e=>{console.log("on shipping method selected",e),i.completeShippingMethodSelection({})},i.onpaymentauthorized=async e=>{try{console.log("paymentAuthorized",e);let a=await angelleyeOrder.createOrder({angelleye_ppcp_button_selector:t,billingDetails:e.payment.billingContact,shippingDetails:e.payment.shippingContact,errorLogId:n}).then(e=>(console.log("orderCreated",e),e.orderID));await ApplePayCheckoutButton.applePay().confirmOrder({orderId:a,token:e.payment.token,billingContact:e.payment.billingContact,shippingContact:e.payment.shippingContact}),await i.completePayment({status:ApplePaySession.STATUS_SUCCESS}),angelleyeOrder.approveOrder({orderID:a,payerID:""})}catch(p){s(p)}},i.oncancel=e=>{console.log("Apple Pay Cancelled !!",e),s()},i.begin()}static async handleTokenPayment(e,t){let a=e.data.thisObject.containerSelector;angelleyeOrder.createOrder({angelleye_ppcp_button_selector:a,callback(){},errorLogId:t}).catch(e=>{angelleyeOrder.handleCreateOrderError(e,t)})}}
