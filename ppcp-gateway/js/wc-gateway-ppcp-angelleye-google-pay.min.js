class GooglePayCheckoutButton{static googlePayConfig;static isConfigLoading;static configPromise;static googlePayObject;static baseRequest={apiVersion:2,apiVersionMinor:0};constructor(){}async initGooglePayConfig(){return GooglePayCheckoutButton.isConfigLoading?(GooglePayCheckoutButton.configPromise||(GooglePayCheckoutButton.configPromise=new Promise((e,t)=>{let o=setInterval(()=>{GooglePayCheckoutButton.googlePayConfig&&(e(GooglePayCheckoutButton.googlePayConfig),clearInterval(o))},100)})),GooglePayCheckoutButton.configPromise):(GooglePayCheckoutButton.googlePayConfig||(GooglePayCheckoutButton.isConfigLoading=!0,GooglePayCheckoutButton.googlePayConfig=await GooglePayCheckoutButton.googlePay().config()),GooglePayCheckoutButton.googlePayConfig)}static googlePay(){return GooglePayCheckoutButton.googlePayObject||(GooglePayCheckoutButton.googlePayObject=angelleye_paypal_sdk.Googlepay()),GooglePayCheckoutButton.googlePayObject}render(e){console.log("containerSelector",e),this.initGooglePayConfig().then(()=>{let t=this.getGooglePaymentsClient(),o=GooglePayCheckoutButton.googlePayConfig.allowedPaymentMethods;t.isReadyToPay(this.getGoogleIsReadyToPayRequest(o)).then(t=>{console.log("isReadyToPay",t),t.result&&(this.showGooglePayPaymentMethod(),this.renderButton(e))}).catch(t=>{console.error("errorcatch",t),this.removeGooglePayPaymentMethod(e)})})}getGoogleIsReadyToPayRequest(e){return Object.assign({},GooglePayCheckoutButton.baseRequest,{allowedPaymentMethods:e})}isShippingRequired(){let e=angelleyeOrder.getCartDetails();return!angelleyeOrder.isCheckoutPage()&&e&&void 0!==e.shippingRequired&&e.shippingRequired}getGooglePaymentsClient(e){return console.log("onPaymentAuthorized",this.containerSelector,e),new google.payments.api.PaymentsClient({environment:"1"===angelleye_ppcp_manager.sandbox_mode?"TEST":"PRODUCTION",paymentDataCallbacks:{onPaymentDataChanged:this.isShippingRequired()?this.onPaymentDataChanged.bind(null,{thisObject:this,orderID:e&&e.orderID?e.orderID:null}):null,onPaymentAuthorized:this.onPaymentAuthorized.bind(null,{thisObject:this,orderID:e&&e.orderID?e.orderID:null})}})}showGooglePayPaymentMethod(){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_google_pay").show()}removeGooglePayPaymentMethod(e){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_google_pay").hide(),jQuery(e).length&&jQuery(e).remove()}onPaymentAuthorized(e,t){console.log("onPaymentAuthorized",e,t);let o=e=>(console.error("parseErrorMessage",e),console.log(JSON.stringify(e)),e);return new Promise((n,a)=>{angelleyeOrder.showProcessingSpinner(),e.thisObject.processPayment(e,t).then(function(e){n({transactionState:"SUCCESS"})}).catch(function(e){let t=o(e);angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(t),n({transactionState:"ERROR"})})})}onPaymentDataChanged(e,t){return new Promise(async function(o,n){console.log("on shipping changed",t);let a=t.shippingAddress,i={};if("INITIALIZE"==t.callbackTrigger||"SHIPPING_ADDRESS"==t.callbackTrigger)try{let r=await angelleyeOrder.shippingAddressUpdate({shippingDetails:{administrativeArea:a.administrativeArea,countryCode:a.countryCode,locality:a.locality,postalCode:a.postalCode}});if(void 0!==r.totalAmount)angelleyeOrder.updateCartTotalsInEnvironment(r),i.newTransactionInfo=e.thisObject.getGoogleTransactionInfo();else throw Error("Unable to update the shipping amount.")}catch(l){angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(l),i.error="Unable to pull the shipping amount details based on selected address",n("Unable to pull the shipping amount details based on selected address")}o(i)})}async processPayment(e,t){try{console.log("processPayment",e,JSON.stringify(t));let{status:o}=await GooglePayCheckoutButton.googlePay().confirmOrder({orderId:e.orderID,paymentMethodData:t.paymentMethodData});if("APPROVED"!==o)return{transactionState:"ERROR"};if(!angelleyeOrder.isCheckoutPage()){let n,a=t.shippingAddress;t.paymentMethodData&&t.paymentMethodData.info&&t.paymentMethodData.info.billingAddress&&(n=t.paymentMethodData.info.billingAddress),t.email&&(n||(n={}),n.emailAddress=t.email),await angelleyeOrder.shippingAddressUpdate({shippingDetails:a},{billingDetails:n})}return angelleyeOrder.approveOrder({orderID:e.orderID,payerID:""}),{transactionState:"SUCCESS"}}catch(i){return console.log("processPaymentError",i),angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(i),{transactionState:"ERROR",error:{message:i.message}}}}renderButton(e){this.containerSelector=e;let t=jQuery(e);t.html(""),console.log("rendering google_pay button",e,t);let o="default",n="plain",a="";if(void 0!==angelleye_ppcp_manager.google_pay_button_props){o=angelleye_ppcp_manager.google_pay_button_props.buttonColor,n=angelleye_ppcp_manager.google_pay_button_props.buttonType;let i=angelleye_ppcp_manager.google_pay_button_props.height;a=i=""!==i?"height: "+i+"px;":""}let r=jQuery('<div class="google-pay-container" style="'+(""!=a?a:"")+'"></div>'),l=this,s=this.getGooglePaymentsClient(),g=s.createButton({buttonColor:o,buttonType:n,buttonSizeMode:"fill",async onClick(e){await l.handleClickEvent(e,l)}});r.append(g),t.append(r)}getGoogleTransactionInfo(){let e=[],t=angelleyeOrder.getCartDetails();for(let o=0;o<t.lineItems.length;o++){let n="LINE_ITEM";"tax"===t.lineItems[o].label.toLowerCase()&&(n="TAX"),e.push({label:t.lineItems[o].label,price:t.lineItems[o].amount,type:n})}return{displayItems:e,currencyCode:t.currencyCode,totalPriceStatus:"FINAL",totalPrice:t.totalAmount,totalPriceLabel:"Total"}}getGooglePaymentDataRequest(){let e=Object.assign({},GooglePayCheckoutButton.baseRequest);return e.allowedPaymentMethods=GooglePayCheckoutButton.googlePayConfig.allowedPaymentMethods,e.transactionInfo=this.getGoogleTransactionInfo(),e.merchantInfo=GooglePayCheckoutButton.googlePayConfig.merchantInfo,e.emailRequired=!0,e.callbackIntents=["PAYMENT_AUTHORIZATION"],this.isShippingRequired()&&(e.callbackIntents.push("SHIPPING_ADDRESS"),e.shippingAddressRequired=!0),e}async handleClickEvent(e,t){console.log("click event",e,t.containerSelector);let o=angelleyeOrder.getCartDetails();o.totalAmount<=0&&angelleyeOrder.showError("Your shopping cart seems to be empty."),angelleyeOrder.setPaymentMethodSelector("google_pay");let n;try{angelleyeOrder.showProcessingSpinner(),n=await angelleyeOrder.createOrder({angelleye_ppcp_button_selector:t.containerSelector}).then(e=>(console.log("orderCreated",e),angelleyeOrder.updateCartTotalsInEnvironment(e),e.orderID))}catch(a){a=a.message,angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(a);return}let i=t.getGooglePaymentDataRequest(),r=t.getGooglePaymentsClient({orderID:n});r.loadPaymentData(i).then(e=>{console.log("success",e)},e=>{angelleyeOrder.triggerPaymentCancelEvent(),angelleyeOrder.hideProcessingSpinner(t.containerSelector),angelleyeOrder.hideProcessingSpinner(),console.log("error handler click",e)})}}
