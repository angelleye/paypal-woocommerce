class GooglePayCheckoutButton{static googlePayConfig;static isConfigLoading;static configPromise;static googlePayObject;static baseRequest={apiVersion:2,apiVersionMinor:0};constructor(){}async initGooglePayConfig(){return GooglePayCheckoutButton.isConfigLoading?(GooglePayCheckoutButton.configPromise||(GooglePayCheckoutButton.configPromise=new Promise((e,o)=>{let t=setInterval(()=>{GooglePayCheckoutButton.googlePayConfig&&(e(GooglePayCheckoutButton.googlePayConfig),clearInterval(t))},100)})),GooglePayCheckoutButton.configPromise):(GooglePayCheckoutButton.googlePayConfig||(GooglePayCheckoutButton.isConfigLoading=!0,GooglePayCheckoutButton.googlePayConfig=await GooglePayCheckoutButton.googlePay().config()),GooglePayCheckoutButton.googlePayConfig)}static googlePay(){return GooglePayCheckoutButton.googlePayObject||(GooglePayCheckoutButton.googlePayObject=angelleye_paypal_sdk.Googlepay()),GooglePayCheckoutButton.googlePayObject}render(e){console.log("containerSelector",e),this.initGooglePayConfig().then(()=>{let o=this.getGooglePaymentsClient(),t=GooglePayCheckoutButton.googlePayConfig.allowedPaymentMethods;o.isReadyToPay(this.getGoogleIsReadyToPayRequest(t)).then(o=>{console.log("isReadyToPay",o),o.result&&(this.showGooglePayPaymentMethod(),this.renderButton(e))}).catch(e=>{console.error("errorcatch",e),this.removeGooglePayPaymentMethod()})})}getGoogleIsReadyToPayRequest(e){return Object.assign({},GooglePayCheckoutButton.baseRequest,{allowedPaymentMethods:e})}getGooglePaymentsClient(e){return console.log("onPaymentAuthorized",this.containerSelector,e),new google.payments.api.PaymentsClient({environment:"TEST",paymentDataCallbacks:{onPaymentAuthorized:this.onPaymentAuthorized.bind(null,{thisObject:this,orderID:e&&e.orderID?e.orderID:null})}})}showGooglePayPaymentMethod(){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_google_pay").show()}removeGooglePayPaymentMethod(){angelleyeOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_angelleye_ppcp_google_pay").hide()}onPaymentAuthorized(e,o){console.log("onPaymentAuthorized",e,o);let t=e=>{if(console.error("parseErrorMessage",e),console.log(JSON.stringify(e)),"PayPalApplePayError"===e.name){let o=e.paypalDebugId;return"ERROR_VALIDATING_MERCHANT"===e.errorName?"This merchant is not enabled to process apple pay. please contact website owner. [DebugId: "+o+"]":"We are unable to process your request at the moment, please contact website owner. [DebugId: "+o+"]"}return e};return new Promise((a,n)=>{angelleyeOrder.showProcessingSpinner(),angelleyeOrder.setPaymentMethodSelector("google_pay"),e.thisObject.processPayment(e,o).then(function(e){a({transactionState:"SUCCESS"})}).catch(function(e){let o=t(e);angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(o),a({transactionState:"ERROR"})})})}onPaymentDataChanged(e){console.log("on payment changed",e)}async processPayment(e,o){try{console.log("processPayment",e,o);let{status:t}=await GooglePayCheckoutButton.googlePay().confirmOrder({orderId:e.orderID,paymentMethodData:o.paymentMethodData});if("APPROVED"===t)return angelleyeOrder.approveOrder({orderID:e.orderID,payerID:""}),{transactionState:"SUCCESS"};return{transactionState:"ERROR"}}catch(a){return angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(a),{transactionState:"ERROR",error:{message:a.message}}}}renderButton(e){this.containerSelector=e,this.initProductCartPage();let o=jQuery(e);o.html(""),console.log("rendering google_pay button",e,o);let t=jQuery('<div class="google-pay-container"></div>'),a=this,n=this.getGooglePaymentsClient(),r=n.createButton({async onClick(e){await a.handleClickEvent(e,a)}});if(t.append(r),!angelleyeOrder.isCheckoutPage()){let l=jQuery('<div class="angelleye_ppcp-proceed-to-checkout-button-separator">&mdash; OR &mdash;</div><br>');o.html(l)}o.append(t)}initProductCartPage(){(angelleyeOrder.isProductPage()||angelleyeOrder.isCartPage()||angelleyeOrder.isOrderPayPage())&&(window.angelleye_cart_totals=angelleye_ppcp_manager.product_cart_details)}getGoogleTransactionInfo(){return{currencyCode:window.angelleye_cart_totals.currencyCode,totalPriceStatus:"FINAL",totalPrice:window.angelleye_cart_totals.totalAmount,totalPriceLabel:"Total"}}getGooglePaymentDataRequest(){let e=Object.assign({},GooglePayCheckoutButton.baseRequest);return e.allowedPaymentMethods=GooglePayCheckoutButton.googlePayConfig.allowedPaymentMethods,e.transactionInfo=this.getGoogleTransactionInfo(),e.merchantInfo=GooglePayCheckoutButton.googlePayConfig.merchantInfo,e.callbackIntents=["PAYMENT_AUTHORIZATION"],e}async handleClickEvent(e,o){console.log("click event",e,o.containerSelector),window.angelleye_cart_totals.totalAmount<=0&&angelleyeOrder.showError("Your shopping cart seems to be empty.");let t;try{angelleyeOrder.showProcessingSpinner(),t=await angelleyeOrder.createOrder({angelleye_ppcp_button_selector:o.containerSelector}).then(e=>(console.log("orderCreated",e),e.orderID))}catch(a){angelleyeOrder.hideProcessingSpinner(),angelleyeOrder.showError(a);return}let n=o.getGooglePaymentDataRequest(),r=o.getGooglePaymentsClient({orderID:t});r.loadPaymentData(n).then(e=>{console.log("success",e)},e=>{angelleyeOrder.hideProcessingSpinner(o.containerSelector),console.log("error handler click",e)})}}
